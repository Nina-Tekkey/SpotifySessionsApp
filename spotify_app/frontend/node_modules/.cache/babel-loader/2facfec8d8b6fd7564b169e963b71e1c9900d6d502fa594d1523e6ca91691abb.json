{"ast":null,"code":"var _jsxFileName = \"/Users/ninatekkey/git/creativeproject-module7-490621/spotify_app/frontend/src/components/Dash.component.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"../useAuth\";\nimport getSongsTest from \"../getSongsTest\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport Navbar from \"./navbar.component\";\nimport SongList from \"./song-list.component\";\nimport CreateSong from \"./create-song.component\";\nimport CreateUser from \"./create-user.component\";\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"e6214187eccd44d89b73d411d987175f\"\n});\nexport default function Dash(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [session, setSession] = useState(\"\");\n  const [sessionID, setSessionID] = useState(\"\");\n  var lastSong = \"\";\n  const accessToken = useAuth(code);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  // setSession(getSongsTest(spotifyApi));\n  // console.log(session);\n  // axios.post('http://localhost:5000/songs/id', {name})\n  //     .then(res => console.log(res.data))\n  //     .catch((err) => {\n  //     console.log(err);\n  //     })\n\n  //add username \n  useEffect(() => {\n    if (!accessToken) return;\n    console.log(accessToken);\n    spotifyApi.getMe().then(function (data) {\n      console.log('Some information about the authenticated user', data.body);\n      var username = data.body.display_name;\n      setName(data.body.display_name);\n      console.log(username);\n      axios.post('http://localhost:5000/user/add', {\n        username\n      }).then(res => console.log(res.data)).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {});\n  }, [accessToken]);\n\n  //   useEffect(() => {\n  //     if (!accessToken) return\n  //     getSongsTest(session, spotifyApi);\n  //   }, [session, spotifyApi])\n\n  //   return(\n  // <Router> \n  //     <Navbar name={name} /> \n  //    <br/> \n  //        <Routes> \n  //            <Route path=\"create\" exact element={<CreateSong />} /> \n  //             <Route path=\"songs\" element={<SongList username={name} />} /> \n  //            <Route path=\"user\" element={<CreateUser />} /> \n\n  //          </Routes>\n  //  </Router>\n\n  //   )\n  const handleChange = event => {\n    setSession(event.target.value);\n    console.log(session);\n  };\n  const newSession = () => {\n    var validname = false;\n    axios.post(\"http://localhost:5000/songs/add\", {\n      username: name,\n      sessionName: session\n    }).then(res => {\n      var id = res.data;\n      validname = true;\n      setSessionID(id);\n      console.log(id);\n    }).catch(() => {\n      console.log(\"bad sessionname catch\");\n    });\n  };\n\n  // useEffect(()=>{\n  //     if (session==\"\") return\n  //     if (sessionID==\"\") return\n  //     if (!accessToken) return\n  //     console.log(sessionID);\n\n  // },[sessionID])\n  var interval;\n  useEffect(() => {\n    if (session == \"\") return;\n    if (sessionID == \"\") return;\n    if (!accessToken) return;\n    interval = setInterval(() => {\n      fetchSong();\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [sessionID]);\n  const stopSession = () => {\n    clearInterval(interval);\n  };\n  const fetchSong = () => {\n    spotifyApi.getMyCurrentPlayingTrack().then(function (data) {\n      if (data.body.is_playing != false) {\n        if (lastSong != data.body.item.name) {\n          setLastSong(data.body.item.name);\n          console.log(lastSong);\n          axios.post(\"http://localhost:5000/songs/update\", {\n            sessionID: sessionID,\n            songTitle: data.body.item.name\n          }).then(res => {\n            console.log(\"update w song\");\n          }).catch(() => {\n            console.log(\"bad update catch\");\n          });\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"message\",\n      name: \"message\",\n      onChange: handleChange,\n      value: session\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newSession,\n      children: \"Start Sesstion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopSession,\n      children: \"Stop Sesstion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(Dash, \"HycFmRGWIT2ao57GmORYDCW7YSo=\", false, function () {\n  return [useAuth];\n});\n_c = Dash;\nvar _c;\n$RefreshReg$(_c, \"Dash\");","map":{"version":3,"names":["useState","useEffect","useAuth","getSongsTest","Container","Form","SpotifyWebApi","axios","Navbar","SongList","CreateSong","CreateUser","BrowserRouter","Router","Routes","Route","Link","spotifyApi","clientId","Dash","code","name","setName","session","setSession","sessionID","setSessionID","lastSong","accessToken","setAccessToken","console","log","getMe","then","data","body","username","display_name","post","res","catch","err","handleChange","event","target","value","newSession","validname","sessionName","id","interval","setInterval","fetchSong","clearInterval","stopSession","getMyCurrentPlayingTrack","is_playing","item","setLastSong","songTitle","height","overflowY"],"sources":["/Users/ninatekkey/git/creativeproject-module7-490621/spotify_app/frontend/src/components/Dash.component.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport useAuth from \"../useAuth\"\nimport getSongsTest from \"../getSongsTest\"\nimport { Container, Form } from \"react-bootstrap\"\nimport SpotifyWebApi from \"spotify-web-api-node\"\nimport axios from \"axios\"\nimport Navbar from \"./navbar.component\"\nimport SongList from \"./song-list.component\";\nimport CreateSong from \"./create-song.component\";\nimport CreateUser from \"./create-user.component\";\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Link\n  } from 'react-router-dom';\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"e6214187eccd44d89b73d411d987175f\",\n})\n\nexport default function Dash({ code }) {\n    const[name, setName]=useState(\"\");\n    const[session, setSession]=useState(\"\");\n    const[sessionID, setSessionID]=useState(\"\");\n   var lastSong=\"\";\n   const accessToken = useAuth(code);\n  \n   useEffect(() => {\n    if (!accessToken) return\n    spotifyApi.setAccessToken(accessToken)\n  }, [accessToken])\n\n  \n   // setSession(getSongsTest(spotifyApi));\n   // console.log(session);\n    // axios.post('http://localhost:5000/songs/id', {name})\n    //     .then(res => console.log(res.data))\n    //     .catch((err) => {\n    //     console.log(err);\n    //     })\n\n\n//add username \n  useEffect(()=>{\n    if(!accessToken) return\n    console.log(accessToken);\n    spotifyApi.getMe()\n    .then(function(data) {\n        console.log('Some information about the authenticated user', data.body);\n        var username = data.body.display_name;\n        setName(data.body.display_name);\n        console.log(username);\n        axios.post('http://localhost:5000/user/add', {username})\n        .then(res => console.log(res.data))\n        .catch((err) => {\n        console.log(err);\n        })\n      }).catch((err) => {\n        \n        })\n\n  }, [accessToken])\n\n\n//   useEffect(() => {\n//     if (!accessToken) return\n//     getSongsTest(session, spotifyApi);\n//   }, [session, spotifyApi])\n\n\n\n\n\n\n\n//   return(\n// <Router> \n//     <Navbar name={name} /> \n//    <br/> \n//        <Routes> \n//            <Route path=\"create\" exact element={<CreateSong />} /> \n//             <Route path=\"songs\" element={<SongList username={name} />} /> \n//            <Route path=\"user\" element={<CreateUser />} /> \n           \n//          </Routes>\n//  </Router>\n \n \n \n//   )\nconst handleChange = (event) => {\n    setSession(event.target.value);\n    console.log(session);\n  };\n\n  const newSession = () => {\n    var validname= false;\n    axios\n    .post(\"http://localhost:5000/songs/add\", {\n      username: name,\n      sessionName:session\n    })\n    .then(res => {\n      var id=res.data;\n      \n        validname=true;\n        setSessionID(id);\n      console.log(id);\n     \n    })\n    .catch(() => {\n        console.log(\"bad sessionname catch\");\n\n    })\n  \n  };\n\n\n// useEffect(()=>{\n//     if (session==\"\") return\n//     if (sessionID==\"\") return\n//     if (!accessToken) return\n//     console.log(sessionID);\n    \n\n\n// },[sessionID])\nvar interval;\nuseEffect(() => {\n    if (session==\"\") return\n    if (sessionID==\"\") return\n    if (!accessToken) return\n     interval = setInterval(() => {\n     fetchSong();\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [sessionID]);\n\n  const stopSession=()=>{\n    clearInterval(interval);\n\n  }\n\n\n  const fetchSong=()=>{\n\n    spotifyApi.getMyCurrentPlayingTrack()\n    .then(function(data){ \n        if(data.body.is_playing!=false){\n            if(lastSong!=data.body.item.name){\n                setLastSong(data.body.item.name);\n            console.log(lastSong);\n            axios\n            .post(\"http://localhost:5000/songs/update\", {\n              sessionID: sessionID,\n              songTitle: data.body.item.name\n            })\n            .then(res => {\n              console.log(\"update w song\");\n            })\n            .catch(() => {\n                console.log(\"bad update catch\");\n        \n            }) \n        }\n        }\n    } )\n    .catch((err) => {\n    console.log(err);\n    })\n}\n  \n\nreturn (\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n    <input\n        type=\"text\"\n        id=\"message\"\n        name=\"message\"\n        onChange={handleChange}\n        value={session}\n      />\n\n    <button onClick={newSession}>Start Sesstion</button>\n    <button onClick={stopSession}>Stop Sesstion</button>\n   <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n        Songs\n    </div>\n  </Container>\n  )\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}