{"ast":null,"code":"var _jsxFileName = \"/Users/ninatekkey/git/creativeproject-module7-490621/spotify_app/frontend/src/components/Dash.component.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./Dash.css\";\nimport useAuth from \"../useAuth\";\nimport getSongsTest from \"../getSongsTest\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport SessionResult from \"../SessionResult\";\nimport HistoryResults from \"../HistoryResults\";\n// import Navbar from \"./navbar.component\"\n// import SongList from \"./song-list.component\";\n// import CreateSong from \"./create-song.component\";\n// import CreateUser from \"./create-user.component\";\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Login from \"../Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"e6214187eccd44d89b73d411d987175f\"\n});\nexport default function Dash(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [session, setSession] = useState(\"\");\n  const [sessionID, setSessionID] = useState(\"\");\n  var lastSong = \"\";\n  var preMap = [];\n  var key = 0;\n  var mapItem = \"\";\n  const [listOfSongs, setListOfSongs] = useState([]);\n  const [listofHist, setListofHist] = useState([]);\n  const accessToken = useAuth(code);\n  profURL;\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  // setSession(getSongsTest(spotifyApi));\n  // console.log(session);\n  // axios.post('http://localhost:5000/songs/id', {name})\n  //     .then(res => console.log(res.data))\n  //     .catch((err) => {\n  //     console.log(err);\n  //     })\n\n  //add username \n  useEffect(() => {\n    if (!accessToken) return;\n    console.log(accessToken);\n    spotifyApi.getMe().then(function (data) {\n      console.log('Some information about the authenticated user', data.body);\n      var username = data.body.display_name;\n      setName(data.body.display_name);\n      console.log(username);\n      axios.post('http://localhost:5000/user/add', {\n        username\n      }).then(res => console.log(res.data)).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {});\n  }, [accessToken]);\n\n  //   useEffect(() => {\n  //     if (!accessToken) return\n  //     getSongsTest(session, spotifyApi);\n  //   }, [session, spotifyApi])\n\n  //   return(\n  // <Router> \n  //     <Navbar name={name} /> \n  //    <br/> \n  //        <Routes> \n  //            <Route path=\"create\" exact element={<CreateSong />} /> \n  //             <Route path=\"songs\" element={<SongList username={name} />} /> \n  //            <Route path=\"user\" element={<CreateUser />} /> \n\n  //          </Routes>\n  //  </Router>\n\n  //   )\n  const handleChange = event => {\n    setSession(event.target.value);\n    console.log(session);\n  };\n  const newSession = () => {\n    if (session === \"\") {\n      console.log(\"invalid session name\");\n      return;\n    }\n    var validname = false;\n    axios.post(\"http://localhost:5000/songs/add\", {\n      username: name,\n      sessionName: session\n    }).then(res => {\n      var id = res.data;\n      validname = true;\n      setSessionID(id);\n      console.log(id);\n    }).catch(() => {\n      console.log(\"bad sessionname catch\");\n    });\n  };\n\n  // useEffect(()=>{\n  //     if (session==\"\") return\n  //     if (sessionID==\"\") return\n  //     if (!accessToken) return\n  //     console.log(sessionID);\n\n  // },[sessionID])\n  var interval;\n  useEffect(() => {\n    if (session == \"\") return;\n    if (sessionID == \"\") return;\n    if (!accessToken) return;\n    interval = setInterval(() => {\n      fetchSong();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [sessionID]);\n  const stopSession = () => {\n    setSessionID(\"\");\n    setSession(\"\");\n    lastSong = \"\";\n    preMap = [];\n    key = 0;\n    mapItem = \"\";\n    setListOfSongs([]);\n    clearInterval(interval);\n  };\n  const fetchSong = () => {\n    spotifyApi.getMyCurrentPlayingTrack().then(function (data) {\n      if (data.body.is_playing != false) {\n        console.log(lastSong);\n        if (lastSong != data.body.item.name) {\n          lastSong = data.body.item.name;\n          console.log(data.body.item);\n          //   console.log(data.body.item.artists[0].name);\n\n          axios.post(\"http://localhost:5000/songs/updateSong\", {\n            sessionID: sessionID,\n            songTitle: data.body.item.name\n          }).then(res => {\n            console.log(\"update w song\");\n          }).catch(() => {\n            console.log(\"bad update catch\");\n          });\n          axios.post(\"http://localhost:5000/songs/updateArtist\", {\n            sessionID: sessionID,\n            songArtist: data.body.item.artists[0].name\n          }).then(res => {\n            console.log(\"update w art\");\n          }).catch(() => {\n            console.log(\"bad update catch\");\n          });\n\n          //THIS IS TEST MAP\n\n          // update the state\n\n          //difftest\n\n          preMap = [...preMap, data.body.item];\n          setListOfSongs(preMap);\n          console.log(preMap);\n          key = key + 1;\n\n          // var newMap = data.body.item.map(item => {\n          //   const smallestAlbumImage = item.album.images.reduce(\n          //     (smallest, image) => {\n          //       if (image.height < smallest.height) return image\n          //       return smallest\n          //     },\n          //     item.album.images[0]\n          //   )\n\n          //   return {\n          //     artist: item.artists[0],\n          //     title: item.name,\n          //     uri: item.uri,\n          //     albumUrl: smallestAlbumImage.url,\n          //   }\n          // })\n\n          //END TEST MAP\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  useEffect(() => {\n    if (listOfSongs.length === 0) return;\n    console.log(listOfSongs);\n  });\n  const logOut = () => {\n    setName(\"\");\n    setSession(\"\");\n    setSessionID(\"\");\n    var lastSong = \"\";\n    var preMap = [];\n    var key = 0;\n    var mapItem = \"\";\n    setListOfSongs([]);\n    console.log(\"out\");\n    window.location = \"/\";\n  };\n  const history = () => {\n    console.log(name);\n    axios.post(\"http://localhost:5000/songs/history\", {\n      username: name\n    }).then(res => {\n      console.log(res.data[0]);\n      setListofHist(res.data);\n    }).catch(() => {\n      console.log(\"bad hist catch\");\n    });\n  };\n  const remhistory = () => {\n    setListofHist([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"LoginFormTwo text-muted\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profURL,\n        style: {\n          height: \"64px\",\n          width: \"64px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"message\",\n      name: \"message\",\n      onChange: handleChange,\n      value: session\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-success mb-1\",\n      onClick: newSession,\n      children: \"Start Sesstion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-success\",\n      onClick: stopSession,\n      children: \"Stop Sesstion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-light\",\n      children: \"Current Session:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm flex-grow-1 my-2 b-5\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: listOfSongs.map(track => /*#__PURE__*/_jsxDEV(SessionResult, {\n        track: track\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-light\",\n      children: \"Previous Sessions:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm flex-grow-1 my-2 text-muted\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: listofHist.map(track => /*#__PURE__*/_jsxDEV(HistoryResults, {\n        track: track\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-absolute bottom-0 start-0\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-success\",\n        onClick: logOut,\n        children: \"log out \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 63\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-absolute bottom-0 start-50\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-success\",\n        onClick: history,\n        children: \"View History \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 64\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-absolute bottom-0 end-0\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-success\",\n        onClick: remhistory,\n        children: \"Remove History \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 61\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n}\n_s(Dash, \"sy4AVFD252LydwIXrwwEHn8hXWs=\", false, function () {\n  return [useAuth];\n});\n_c = Dash;\nvar _c;\n$RefreshReg$(_c, \"Dash\");","map":{"version":3,"names":["useState","useEffect","useAuth","getSongsTest","Container","Form","Button","SpotifyWebApi","axios","SessionResult","HistoryResults","BrowserRouter","Router","Routes","Route","Link","Login","spotifyApi","clientId","Dash","code","name","setName","session","setSession","sessionID","setSessionID","lastSong","preMap","key","mapItem","listOfSongs","setListOfSongs","listofHist","setListofHist","accessToken","profURL","setAccessToken","console","log","getMe","then","data","body","username","display_name","post","res","catch","err","handleChange","event","target","value","newSession","validname","sessionName","id","interval","setInterval","fetchSong","clearInterval","stopSession","getMyCurrentPlayingTrack","is_playing","item","songTitle","songArtist","artists","length","logOut","window","location","history","remhistory","height","width","overflowY","map","track","uri"],"sources":["/Users/ninatekkey/git/creativeproject-module7-490621/spotify_app/frontend/src/components/Dash.component.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport \"./Dash.css\";\nimport useAuth from \"../useAuth\"\nimport getSongsTest from \"../getSongsTest\"\nimport { Container, Form , Button} from \"react-bootstrap\"\nimport SpotifyWebApi from \"spotify-web-api-node\"\nimport axios from \"axios\"\nimport SessionResult from \"../SessionResult\"\nimport HistoryResults from \"../HistoryResults\"\n// import Navbar from \"./navbar.component\"\n// import SongList from \"./song-list.component\";\n// import CreateSong from \"./create-song.component\";\n// import CreateUser from \"./create-user.component\";\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    Link\n  } from 'react-router-dom';\nimport Login from \"../Login\"\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"e6214187eccd44d89b73d411d987175f\",\n})\n\nexport default function Dash({ code }) {\n   \n    const[name, setName]=useState(\"\");\n    const[session, setSession]=useState(\"\");\n    const[sessionID, setSessionID]=useState(\"\");\n    var lastSong = \"\";\n    var preMap = [];\n   var key =0;\n    var mapItem=\"\";\n   \n    const[listOfSongs, setListOfSongs]=useState([]);\n    const[listofHist, setListofHist]=useState([]);\n   const accessToken = useAuth(code);\n  \n   profURL\n\n\n   useEffect(() => {\n    if (!accessToken) return\n    spotifyApi.setAccessToken(accessToken)\n  }, [accessToken])\n\n  \n   // setSession(getSongsTest(spotifyApi));\n   // console.log(session);\n    // axios.post('http://localhost:5000/songs/id', {name})\n    //     .then(res => console.log(res.data))\n    //     .catch((err) => {\n    //     console.log(err);\n    //     })\n\n\n//add username \n  useEffect(()=>{\n    if(!accessToken) return\n    console.log(accessToken);\n    spotifyApi.getMe()\n    .then(function(data) {\n        console.log('Some information about the authenticated user', data.body);\n        var username = data.body.display_name;\n        setName(data.body.display_name);\n        \n        console.log(username);\n        axios.post('http://localhost:5000/user/add', {username})\n        .then(res => console.log(res.data))\n        .catch((err) => {\n        console.log(err);\n        })\n      }).catch((err) => {\n        \n        })\n\n  }, [accessToken])\n\n\n//   useEffect(() => {\n//     if (!accessToken) return\n//     getSongsTest(session, spotifyApi);\n//   }, [session, spotifyApi])\n\n\n\n\n\n\n\n//   return(\n// <Router> \n//     <Navbar name={name} /> \n//    <br/> \n//        <Routes> \n//            <Route path=\"create\" exact element={<CreateSong />} /> \n//             <Route path=\"songs\" element={<SongList username={name} />} /> \n//            <Route path=\"user\" element={<CreateUser />} /> \n           \n//          </Routes>\n//  </Router>\n \n \n \n//   )\nconst handleChange = (event) => {\n    setSession(event.target.value);\n    console.log(session);\n  };\n\n  const newSession = () => {\n    if(session===\"\"){\n        console.log(\"invalid session name\");\n        return;\n    }\n    var validname= false;\n    axios\n    .post(\"http://localhost:5000/songs/add\", {\n      username: name,\n      sessionName:session\n    })\n    .then(res => {\n      var id=res.data;\n      \n        validname=true;\n        setSessionID(id);\n      console.log(id);\n     \n    })\n    .catch(() => {\n        console.log(\"bad sessionname catch\");\n\n    })\n  \n  };\n\n\n// useEffect(()=>{\n//     if (session==\"\") return\n//     if (sessionID==\"\") return\n//     if (!accessToken) return\n//     console.log(sessionID);\n    \n\n\n// },[sessionID])\nvar interval;\nuseEffect(() => {\n    if (session==\"\") return\n    if (sessionID==\"\") return\n    if (!accessToken) return\n     interval = setInterval(() => {\n     fetchSong();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [sessionID]);\n\n  const stopSession=()=>{\n    setSessionID(\"\");\n    setSession(\"\");\n     lastSong = \"\";\n     preMap = [];\n    key =0;\n     mapItem=\"\";\n   setListOfSongs([]);\n\n    clearInterval(interval);\n\n  }\n\n\n  const fetchSong=()=>{\n    \n    spotifyApi.getMyCurrentPlayingTrack()\n    .then(function(data){ \n        if(data.body.is_playing!=false){\n            console.log(lastSong);\n            if(lastSong!=data.body.item.name){\n               lastSong =data.body.item.name;\n                console.log(data.body.item);\n         //   console.log(data.body.item.artists[0].name);\n         \n            axios\n            .post(\"http://localhost:5000/songs/updateSong\", {\n              sessionID: sessionID,\n              songTitle: data.body.item.name,\n              \n            })\n            .then(res => {\n              console.log(\"update w song\");\n            })\n            .catch(() => {\n                console.log(\"bad update catch\");\n            }) \n\n            axios.post(\"http://localhost:5000/songs/updateArtist\", {\n              sessionID: sessionID,\n             \n              songArtist: data.body.item.artists[0].name\n            })\n            .then(res => {\n              console.log(\"update w art\");\n            })\n            .catch(() => {\n                console.log(\"bad update catch\");\n        \n            }) \n\n\n\n            //THIS IS TEST MAP\n            \n            \n          \n            // update the state\n            \n           \n            //difftest\n            \n            preMap =[...preMap, data.body.item];\n            setListOfSongs(preMap);\n            console.log(preMap);\n            key=key+1;\n                \n                // var newMap = data.body.item.map(item => {\n                //   const smallestAlbumImage = item.album.images.reduce(\n                //     (smallest, image) => {\n                //       if (image.height < smallest.height) return image\n                //       return smallest\n                //     },\n                //     item.album.images[0]\n                //   )\n        \n                //   return {\n                //     artist: item.artists[0],\n                //     title: item.name,\n                //     uri: item.uri,\n                //     albumUrl: smallestAlbumImage.url,\n                //   }\n                // })\n            \n            \n\n                \n\n            //END TEST MAP\n\n        }\n        }\n    } )\n    .catch((err) => {\n    console.log(err);\n    })\n}\n  \n\nuseEffect(() => {\n    if(listOfSongs.length===0) return\n    \n    console.log(listOfSongs);\n    \n  });\n\n  \n\nconst logOut=()=>{\n    \n    setName(\"\");\n    setSession(\"\");\n    setSessionID(\"\");\n    var lastSong = \"\";\n    var preMap = [];\n   var key =0;\n    var mapItem=\"\";\n   setListOfSongs([]);\n   console.log(\"out\");\n   window.location = \"/\";\n\n}\n\n\nconst history=()=>{\n  console.log(name);\n  axios.post(\"http://localhost:5000/songs/history\", {\n    username: name\n  })\n  .then(res => {\n   console.log(res.data[0]);\n   setListofHist(res.data);\n   \n\n  })\n  .catch(() => {\n      console.log(\"bad hist catch\");\n\n  })              \n\n}\n\nconst remhistory=()=>{\n    setListofHist([]);\n}\n\nreturn (\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n    \n        <h3 className=\"LoginFormTwo text-muted\">\n        <img src={profURL} style={{ height: \"64px\", width: \"64px\" }} />\n            \n            {name}</h3>\n    <input\n        type=\"text\"\n        id=\"message\"\n        name=\"message\"\n        onChange={handleChange}\n        value={session}\n      />\n      \n\n    <Button className=\"btn btn-success mb-1\" onClick={newSession}>Start Sesstion</Button>\n    <Button className=\"btn btn-success\" onClick={stopSession}>Stop Sesstion</Button>\n    {/* <div className=\"row\">\n    <div className=\"col\">\n      One of  columns\n    </div>\n    <div className=\"col\">\n      One of three columns\n    </div>\n  </div> */}\n  <div className=\"text-light\">Current Session:</div>\n    <div className=\"col-sm flex-grow-1 my-2 b-5\" style={{ overflowY: \"auto\" }}>\n        \n        {\n        listOfSongs.map(track => (\n          <SessionResult\n            track={track}\n            key={track.uri}\n            \n          />\n        ))}\n        </div>\n       <div className=\"text-light\">Previous Sessions:</div>\n      <div className=\"col-sm flex-grow-1 my-2 text-muted\" style={{ overflowY: \"auto\" }}>\n        \n        {listofHist.map(track => (\n          <HistoryResults\n            track={track}\n            key = {track.id}\n            \n          />\n        ))}\n      \n        </div>\n        <div className=\"position-absolute bottom-0 start-0\" > <Button className=\"btn btn-success\" onClick={logOut}>log out </Button> </div>\n        <div className=\"position-absolute bottom-0 start-50\" > <Button className=\"btn btn-success\" onClick={history}>View History </Button> </div>\n        <div className=\"position-absolute bottom-0 end-0\" > <Button className=\"btn btn-success\" onClick={remhistory}>Remove History </Button> </div>\n\n  </Container>\n  )\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}