{"ast":null,"code":"var _jsxFileName = \"/Users/ninatekkey/git/creativeproject-module7-490621/spotify_app/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport useAuth from \".UseAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: 'e6214187eccd44d89b73d411d987175f'\n});\nconst Dashboard = _ref => {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n  useEffect(() => {\n    if (!playingTrack) return;\n    (async () => {\n      const {\n        data: {\n          lyrics\n        }\n      } = await axios.get(`${process.env.REACT_APP_BASE_URL}/lyrics`, {\n        params: {\n          track: playingTrack.title,\n          artist: playingTrack.artist\n        }\n      });\n      setLyrics(lyrics);\n    })();\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    (async () => {\n      const {\n        body\n      } = await spotifyApi.searchTracks(search);\n      if (cancel) return;\n      setSearchResults(body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    })();\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(DashBoardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultsContainer, {\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(LyricsContainer, {\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerContainer, {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"C/xkEiesDpJOEbcaLNXZ/RIs9iE=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","SpotifyWebApi","axios","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","data","get","process","env","REACT_APP_BASE_URL","params","title","artist","setAccessToken","cancel","body","searchTracks","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","e","target","value","length"],"sources":["/Users/ninatekkey/git/creativeproject-module7-490621/spotify_app/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nimport useAuth from \".UseAuth\"\n\nimport SpotifyWebApi from \"spotify-web-api-node\"\nimport axios from \"axios\"\n\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: 'e6214187eccd44d89b73d411d987175f',\n})\n\nconst Dashboard = ({ code }) => {\n  const accessToken = useAuth(code)\n  const [search, setSearch] = useState(\"\")\n  const [searchResults, setSearchResults] = useState([])\n  const [playingTrack, setPlayingTrack] = useState()\n  const [lyrics, setLyrics] = useState(\"\")\n\n  function chooseTrack(track) {\n    setPlayingTrack(track)\n    setSearch(\"\")\n    setLyrics(\"\")\n  }\n\n  useEffect(() => {\n    if (!playingTrack) return\n    ;(async () => {\n      const {\n        data: { lyrics },\n      } = await axios.get(`${process.env.REACT_APP_BASE_URL}/lyrics`, {\n        params: {\n          track: playingTrack.title,\n          artist: playingTrack.artist,\n        },\n      })\n      setLyrics(lyrics)\n    })()\n  }, [playingTrack])\n\n  useEffect(() => {\n    if (!accessToken) return\n    spotifyApi.setAccessToken(accessToken)\n  }, [accessToken])\n\n  useEffect(() => {\n    if (!search) return setSearchResults([])\n    if (!accessToken) return\n\n    let cancel = false\n    ;(async () => {\n      const { body } = await spotifyApi.searchTracks(search)\n      if (cancel) return\n      setSearchResults(\n        body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image\n              return smallest\n            },\n            track.album.images[0]\n          )\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url,\n          }\n        })\n      )\n    })()\n\n    return () => (cancel = true)\n  }, [search, accessToken])\n\n  return (\n    <DashBoardContainer>\n      <SearchInput\n        type=\"search\"\n        placeholder=\"Search Songs/Artists\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n      />\n      <ResultsContainer>\n        {searchResults.map(track => (\n          <TrackSearchResult\n            track={track}\n            key={track.uri}\n            chooseTrack={chooseTrack}\n          />\n        ))}\n        {searchResults.length === 0 && (\n          <LyricsContainer>{lyrics}</LyricsContainer>\n        )}\n      </ResultsContainer>\n      <PlayerContainer>\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\n      </PlayerContainer>\n    </DashBoardContainer>\n  )\n}\n\nexport default Dashboard"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,OAAO,MAAM,UAAU;AAE9B,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAGzB,MAAMC,UAAU,GAAG,IAAIF,aAAa,CAAC;EACnCG,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACzB,MAAMC,WAAW,GAAGP,OAAO,CAACM,IAAI,CAAC;EACjC,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,EAAE;EAClD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASkB,WAAW,CAACC,KAAK,EAAE;IAC1BJ,eAAe,CAACI,KAAK,CAAC;IACtBR,SAAS,CAAC,EAAE,CAAC;IACbM,SAAS,CAAC,EAAE,CAAC;EACf;EAEAhB,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,YAAY,EAAE;IAClB,CAAC,YAAY;MACZ,MAAM;QACJM,IAAI,EAAE;UAAEJ;QAAO;MACjB,CAAC,GAAG,MAAMZ,KAAK,CAACiB,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,SAAQ,EAAE;QAC9DC,MAAM,EAAE;UACNN,KAAK,EAAEL,YAAY,CAACY,KAAK;UACzBC,MAAM,EAAEb,YAAY,CAACa;QACvB;MACF,CAAC,CAAC;MACFV,SAAS,CAACD,MAAM,CAAC;IACnB,CAAC,GAAG;EACN,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElBb,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,WAAW,EAAE;IAClBJ,UAAU,CAACuB,cAAc,CAACnB,WAAW,CAAC;EACxC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBR,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,MAAM,EAAE,OAAOG,gBAAgB,CAAC,EAAE,CAAC;IACxC,IAAI,CAACJ,WAAW,EAAE;IAElB,IAAIoB,MAAM,GAAG,KAAK;IACjB,CAAC,YAAY;MACZ,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMzB,UAAU,CAAC0B,YAAY,CAACrB,MAAM,CAAC;MACtD,IAAImB,MAAM,EAAE;MACZhB,gBAAgB,CACdiB,IAAI,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAACf,KAAK,IAAI;QAC7B,MAAMgB,kBAAkB,GAAGhB,KAAK,CAACiB,KAAK,CAACC,MAAM,CAACC,MAAM,CAClD,CAACC,QAAQ,EAAEC,KAAK,KAAK;UACnB,IAAIA,KAAK,CAACC,MAAM,GAAGF,QAAQ,CAACE,MAAM,EAAE,OAAOD,KAAK;UAChD,OAAOD,QAAQ;QACjB,CAAC,EACDpB,KAAK,CAACiB,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CACtB;QAED,OAAO;UACLV,MAAM,EAAER,KAAK,CAACuB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;UAC7BjB,KAAK,EAAEP,KAAK,CAACwB,IAAI;UACjBC,GAAG,EAAEzB,KAAK,CAACyB,GAAG;UACdC,QAAQ,EAAEV,kBAAkB,CAACW;QAC/B,CAAC;MACH,CAAC,CAAC,CACH;IACH,CAAC,GAAG;IAEJ,OAAO,MAAOjB,MAAM,GAAG,IAAK;EAC9B,CAAC,EAAE,CAACnB,MAAM,EAAED,WAAW,CAAC,CAAC;EAEzB,oBACE,QAAC,kBAAkB;IAAA,wBACjB,QAAC,WAAW;MACV,IAAI,EAAC,QAAQ;MACb,WAAW,EAAC,sBAAsB;MAClC,KAAK,EAAEC,MAAO;MACd,QAAQ,EAAEqC,CAAC,IAAIpC,SAAS,CAACoC,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACzC,eACF,QAAC,gBAAgB;MAAA,WACdrC,aAAa,CAACsB,GAAG,CAACf,KAAK,iBACtB,QAAC,iBAAiB;QAChB,KAAK,EAAEA,KAAM;QAEb,WAAW,EAAED;MAAY,GADpBC,KAAK,CAACyB,GAAG;QAAA;QAAA;QAAA;MAAA,QAGjB,CAAC,EACDhC,aAAa,CAACsC,MAAM,KAAK,CAAC,iBACzB,QAAC,eAAe;QAAA,UAAElC;MAAM;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA;MAAA;MAAA;MAAA;IAAA,QACgB,eACnB,QAAC,eAAe;MAAA,uBACd,QAAC,MAAM;QAAC,WAAW,EAAEP,WAAY;QAAC,QAAQ,EAAEK,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE8B;MAAI;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACjD;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEzB,CAAC;AAAA,GAzFKrC,SAAS;EAAA,QACOL,OAAO;AAAA;AAAA,KADvBK,SAAS;AA2Ff,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}